1. Создать образ для CRUD'а
2. Создать дефолтный Helm chart
3. Установить БД Postgresql через Helm
4. Установить Ingress контроллер
5. Добавить дефолтные values.yaml для Postgresql и Ingress
6. Добавить в templates yaml файлы для настройки Pod'ов (Deployments, Nginx, Service, ConfigMap, Secrets)
7. Добавить Job для накатки данных в БД


8. Удалить чарты и поды

kubectl create namespace otus-hw3 \
&& helm repo add ingress-nginx https://kubernetes.github.io/ingress-nginx/ \
&& helm repo add bitnami https://charts.bitnami.com/bitnami \
&& helm repo update \
&& helm install nginx ingress-nginx/ingress-nginx --namespace otus-hw3 -f templates/app-ingress.yaml \
&& helm install postgres bitnami/postgresql --namespace otus-hw3 -f templates/db-values.yaml \
&& helm install app . --namespace otus-hw3


helm install postgres bitnami/postgresql --namespace otus-hw3 -f templates/db-values.yaml --dry-run > random_file_name.yaml

helm uninstall nginx --namespace otus-hw3 \
&& helm uninstall postgres --namespace otus-hw3 \
&& kubectl delete pvc -l release=postgres --namespace otus-hw3







DOCKER
sudo docker image rm andrewotuscourse/hw3-app
sudo docker tag hw3-app andrewotuscourse/hw3-app:latest
docker images
docker run -it --rm andrewotuscourse/hw3-app

docker push andrewotuscourse/hw3-app




commands
helm template . --debug

kubectl delete clusterrole nginx-ingress
kubectl delete clusterrolebinding nginx-ingress



** Please be patient while the chart is being deployed **

PostgreSQL can be accessed via port 5432 on the following DNS names from within your cluster:

    postgres-postgresql.otus-hw3.svc.cluster.local - Read/Write connection

To get the password for "postgres" run:

    export POSTGRES_ADMIN_PASSWORD=$(kubectl get secret --namespace otus-hw3 postgres-postgresql -o jsonpath="{.data.postgres-password}" | base64 -d)

To get the password for "root" run:

    export POSTGRES_PASSWORD=$(kubectl get secret --namespace otus-hw3 postgres-postgresql -o jsonpath="{.data.password}" | base64 -d)

To connect to your database run the following command:

    kubectl run postgres-postgresql-client --rm --tty -i --restart='Never' --namespace otus-hw3 --image docker.io/bitnami/postgresql:15.2.0-debian-11-r16 --env="PGPASSWORD=$POSTGRES_PASSWORD" \
      --command -- psql --host postgres-postgresql -U root -d postgres -p 5432

    > NOTE: If you access the container using bash, make sure that you execute "/opt/bitnami/scripts/postgresql/entrypoint.sh /bin/bash" in order to avoid the error "psql: local user with ID 1001} does not exist"

To connect to your database from outside the cluster execute the following commands:

    kubectl port-forward --namespace otus-hw3 svc/postgres-postgresql 5432:5432 &
    PGPASSWORD="$POSTGRES_PASSWORD" psql --host 127.0.0.1 -U root -d postgres -p 5432

WARNING: The configured password will be ignored on new installation in case when previous Posgresql release was deleted through the helm command. In that case, old PVC will have an old password, and setting it through helm won't take effect. Deleting persistent volumes (PVs) will solve the issue.

kubectl exec -it postgres-postgresql-0 -n otus-hw3  -- psql -h localhost -user root --password root -p 5432 -d postgres

CREATE TABLE users (
	id serial PRIMARY KEY,
	user_name VARCHAR ( 50 ) UNIQUE NOT NULL,
	first_name VARCHAR ( 50 ) NOT NULL,
	last_name VARCHAR ( 50 ) NOT NULL,
	email VARCHAR ( 255 ) UNIQUE NOT NULL,
	phone VARCHAR ( 50 ) NOT NULL
);

INSERT INTO users(user_name, first_name, last_name, email, phone) VALUES ('Tom666', 'Tom', 'Hardy', 'tom@gmail.com', '+3(111)34580');

